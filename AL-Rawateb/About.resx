<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAZABkAAD/4gv4SUNDX1BST0ZJTEUAAQEAAAvoAAAAAAIAAABtbnRyUkdCIFhZ
        WiAH2QADABsAFQAkAB9hY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAA9tYAAQAAAADTLQAA
        AAAp+D3er/JVrnhC+uTKgzkNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBkZXNjAAABRAAA
        AHliWFlaAAABwAAAABRiVFJDAAAB1AAACAxkbWRkAAAJ4AAAAIhnWFlaAAAKaAAAABRnVFJDAAAB1AAA
        CAxsdW1pAAAKfAAAABRtZWFzAAAKkAAAACRia3B0AAAKtAAAABRyWFlaAAAKyAAAABRyVFJDAAAB1AAA
        CAx0ZWNoAAAK3AAAAAx2dWVkAAAK6AAAAId3dHB0AAALcAAAABRjcHJ0AAALhAAAADdjaGFkAAALvAAA
        ACxkZXNjAAAAAAAAAB9zUkdCIElFQzYxOTY2LTItMSBibGFjayBzY2FsZWQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAWFlaIAAAAAAAACSgAAAPhAAAts9jdXJ2AAAAAAAABAAAAAAFAAoADwAUABkAHgAjACgALQAy
        ADcAOwBAAEUASgBPAFQAWQBeAGMAaABtAHIAdwB8AIEAhgCLAJAAlQCaAJ8ApACpAK4AsgC3ALwAwQDG
        AMsA0ADVANsA4ADlAOsA8AD2APsBAQEHAQ0BEwEZAR8BJQErATIBOAE+AUUBTAFSAVkBYAFnAW4BdQF8
        AYMBiwGSAZoBoQGpAbEBuQHBAckB0QHZAeEB6QHyAfoCAwIMAhQCHQImAi8COAJBAksCVAJdAmcCcQJ6
        AoQCjgKYAqICrAK2AsECywLVAuAC6wL1AwADCwMWAyEDLQM4A0MDTwNaA2YDcgN+A4oDlgOiA64DugPH
        A9MD4APsA/kEBgQTBCAELQQ7BEgEVQRjBHEEfgSMBJoEqAS2BMQE0wThBPAE/gUNBRwFKwU6BUkFWAVn
        BXcFhgWWBaYFtQXFBdUF5QX2BgYGFgYnBjcGSAZZBmoGewaMBp0GrwbABtEG4wb1BwcHGQcrBz0HTwdh
        B3QHhgeZB6wHvwfSB+UH+AgLCB8IMghGCFoIbgiCCJYIqgi+CNII5wj7CRAJJQk6CU8JZAl5CY8JpAm6
        Cc8J5Qn7ChEKJwo9ClQKagqBCpgKrgrFCtwK8wsLCyILOQtRC2kLgAuYC7ALyAvhC/kMEgwqDEMMXAx1
        DI4MpwzADNkM8w0NDSYNQA1aDXQNjg2pDcMN3g34DhMOLg5JDmQOfw6bDrYO0g7uDwkPJQ9BD14Peg+W
        D7MPzw/sEAkQJhBDEGEQfhCbELkQ1xD1ERMRMRFPEW0RjBGqEckR6BIHEiYSRRJkEoQSoxLDEuMTAxMj
        E0MTYxODE6QTxRPlFAYUJxRJFGoUixStFM4U8BUSFTQVVhV4FZsVvRXgFgMWJhZJFmwWjxayFtYW+hcd
        F0EXZReJF64X0hf3GBsYQBhlGIoYrxjVGPoZIBlFGWsZkRm3Gd0aBBoqGlEadxqeGsUa7BsUGzsbYxuK
        G7Ib2hwCHCocUhx7HKMczBz1HR4dRx1wHZkdwx3sHhYeQB5qHpQevh7pHxMfPh9pH5Qfvx/qIBUgQSBs
        IJggxCDwIRwhSCF1IaEhziH7IiciVSKCIq8i3SMKIzgjZiOUI8Ij8CQfJE0kfCSrJNolCSU4JWgllyXH
        JfcmJyZXJocmtyboJxgnSSd6J6sn3CgNKD8ocSiiKNQpBik4KWspnSnQKgIqNSpoKpsqzysCKzYraSud
        K9EsBSw5LG4soizXLQwtQS12Last4S4WLkwugi63Lu4vJC9aL5Evxy/+MDUwbDCkMNsxEjFKMYIxujHy
        MioyYzKbMtQzDTNGM38zuDPxNCs0ZTSeNNg1EzVNNYc1wjX9Njc2cjauNuk3JDdgN5w31zgUOFA4jDjI
        OQU5Qjl/Obw5+To2OnQ6sjrvOy07azuqO+g8JzxlPKQ84z0iPWE9oT3gPiA+YD6gPuA/IT9hP6I/4kAj
        QGRApkDnQSlBakGsQe5CMEJyQrVC90M6Q31DwEQDREdEikTORRJFVUWaRd5GIkZnRqtG8Ec1R3tHwEgF
        SEtIkUjXSR1JY0mpSfBKN0p9SsRLDEtTS5pL4kwqTHJMuk0CTUpNk03cTiVObk63TwBPSU+TT91QJ1Bx
        ULtRBlFQUZtR5lIxUnxSx1MTU19TqlP2VEJUj1TbVShVdVXCVg9WXFapVvdXRFeSV+BYL1h9WMtZGllp
        WbhaB1pWWqZa9VtFW5Vb5Vw1XIZc1l0nXXhdyV4aXmxevV8PX2Ffs2AFYFdgqmD8YU9homH1YklinGLw
        Y0Njl2PrZEBklGTpZT1lkmXnZj1mkmboZz1nk2fpaD9olmjsaUNpmmnxakhqn2r3a09rp2v/bFdsr20I
        bWBtuW4SbmtuxG8eb3hv0XArcIZw4HE6cZVx8HJLcqZzAXNdc7h0FHRwdMx1KHWFdeF2Pnabdvh3Vnez
        eBF4bnjMeSp5iXnnekZ6pXsEe2N7wnwhfIF84X1BfaF+AX5ifsJ/I3+Ef+WAR4CogQqBa4HNgjCCkoL0
        g1eDuoQdhICE44VHhauGDoZyhteHO4efiASIaYjOiTOJmYn+imSKyoswi5aL/IxjjMqNMY2Yjf+OZo7O
        jzaPnpAGkG6Q1pE/kaiSEZJ6kuOTTZO2lCCUipT0lV+VyZY0lp+XCpd1l+CYTJi4mSSZkJn8mmia1ZtC
        m6+cHJyJnPedZJ3SnkCerp8dn4uf+qBpoNihR6G2oiailqMGo3aj5qRWpMelOKWpphqmi6b9p26n4KhS
        qMSpN6mpqhyqj6sCq3Wr6axcrNCtRK24ri2uoa8Wr4uwALB1sOqxYLHWskuywrM4s660JbSctRO1irYB
        tnm28Ldot+C4WbjRuUq5wro7urW7LrunvCG8m70VvY++Cr6Evv+/er/1wHDA7MFnwePCX8Lbw1jD1MRR
        xM7FS8XIxkbGw8dBx7/IPci8yTrJuco4yrfLNsu2zDXMtc01zbXONs62zzfPuNA50LrRPNG+0j/SwdNE
        08bUSdTL1U7V0dZV1tjXXNfg2GTY6Nls2fHadtr724DcBdyK3RDdlt4c3qLfKd+v4DbgveFE4cziU+Lb
        42Pj6+Rz5PzlhOYN5pbnH+ep6DLovOlG6dDqW+rl63Dr++yG7RHtnO4o7rTvQO/M8Fjw5fFy8f/yjPMZ
        86f0NPTC9VD13vZt9vv3ivgZ+Kj5OPnH+lf65/t3/Af8mP0p/br+S/7c/23//2Rlc2MAAAAAAAAALklF
        QyA2MTk2Ni0yLTEgRGVmYXVsdCBSR0IgQ29sb3VyIFNwYWNlIC0gc1JHQgAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABYWVogAAAAAAAAYpkAALeFAAAY2lhZWiAAAAAAAAAAAABQAAAAAAAAbWVhcwAAAAAAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACWFlaIAAAAAAAAAMWAAADMwAAAqRYWVogAAAAAAAAb6IAADj1AAADkHNp
        ZyAAAAAAQ1JUIGRlc2MAAAAAAAAALVJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBpbiBJRUMgNjE5
        NjYtMi0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYWVogAAAAAAAA9tYAAQAAAADTLXRleHQAAAAAQ29weXJp
        Z2h0IEludGVybmF0aW9uYWwgQ29sb3IgQ29uc29ydGl1bSwgMjAwOQAAc2YzMgAAAAAAAQxEAAAF3///
        8yYAAAeUAAD9j///+6H///2iAAAD2wAAwHX/2wBDAAUDBAQEAwUEBAQFBQUGBwwIBwcHBw8LCwkMEQ8S
        EhEPERETFhwXExQaFRERGCEYGh0dHx8fExciJCIeJBweHx7/2wBDAQUFBQcGBw4ICA4eFBEUHh4eHh4e
        Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh7/wAARCABlALQDASIAAhEB
        AxEB/8QAHQAAAQQDAQEAAAAAAAAAAAAABgADBQcCBAgBCf/EADoQAAEDAwMDAgMFBgUFAAAAAAEAAgME
        BREGITESUWEHQRMicRQyQoGRI1JiobHRCBUzweEWNILw8f/EABkBAQADAQEAAAAAAAAAAAAAAAABAgME
        Bf/EACURAQEAAgEEAwABBQAAAAAAAAABAhEDBBIhMRNBUQUiYYGx0f/aAAwDAQACEQMRAD8A68BwvQVh
        lLKtaHMjullRst5tcVT9mkr6dkv7peAUN3f1AoqOtfTUlFU1wi/1HwM6g1Rug3ytWvuNHQM6quojiH8R
        VbUOqLzrSrm/6cqWUkEGQ/4g+bqHIwhqzX5lf6gSae1nO0zNGYBu1sgTuRtaF41lRQBsduIrZncMjOUI
        XTXdXWXiGxTxOt8svDnbZQ1ra13TQ+po9UWenM9sZ/3MIySG/vN+inbjRWP1PsbLnaajFZGOuKSM4LHp
        s3UZr2K+2Crpq740tdQBw+M1u/y+5UjcLNZtZ2aG4WWaOKrjw9padwQp3Qdu1HJbH2zVMMMjWDoD2/iH
        dTWmdGWjT9TNNb4zH8V3U5o4yoPYX0jFdbpSS2fUVuGI/lEh3DvKntLaNFjq5THUPfA85EbjkBFoa0HI
        aAfom66rgoqWSpqZGxxMGXOKi2YzdTIZhtdDDUGeOFrXnkhQ+sNY2fTVI6Spma+UDaNpySgD1E9W6W30
        sop52U0LQcyuO5XJ/qT6vT3WplhtZfKSSDO/j8l4OX8xn1OfxdDh3fuV8Yz/AK6508wm+W6/t9uiL1ri
        q1WJJXARQNz0Rg/1QTc35J3QJ6JX2art8kNXMXzZIJKM69+5Xdj3yazu79tOOyz+n0gbq/DTuhWunIJ3
        RFd3kscg65SYJRJuWsIdyvGVhzyomeU9XJWDZj3U6Ran2VhA5Tja7yh4Tu7rJtQR7ppGxF9tPdJQAqUl
        Gqnbtu6erNytcRo73pastNxn+Wk+I4OikceB1DYH6rV1PP6haf0zJqWa/U88Zj65aUxYDGkZ+U+Ftevm
        m59aWCKmpJzHFA8vfLG7D2Fu4wfqoT0O1LFr3QlVpLUU7Z7napXUk2T80zR91+PIx/NejXnVIaMsWl9Y
        +nzr3FKa+tnaXGdrz1tf28YUN6HanNsvlx0JqKmNNXEudSzS7/HjzgHPdR/plp/XWhPVS5W22afkm0rX
        SB/xDKA2F3uQPPZWRrr0osmrNQ0F9qaqso6yid1MfTSFhPgkeyhOldarpr96X6+i1Faoqy4Wm5S9NZTQ
        Rl/Rnh4A/mjjWWiKX1AsFNdbf8S13EFssE5bh8buR/8AFZEFJDHSxU72iVsbQAXjJWwwNaA1oAA9gmjQ
        c0lY7hTaebb9RVTLjL09Ln9GAfyUtZ7PbLSx0dvpI6drjkhgwt5eOe1vJUpOJEgcpn4j3jDW4HcpuofF
        TwyVFVMGRRjqc5xwGhBnU1UNPA+aR4axgy5xOwCpT1X1pLX008FI4tpo2ktA/EQsfUTW813qHUduc6Og
        jOBjYyHuVXdeXTR5e8nJxn2Xm9TzfJLhPX+3Tx4dvm+3MuqrzeL9cZX3Oqke0PIbFnDW79lFshDRwinW
        2n6q0Xqf4reqGV5fHIBscnha9h05crxKG01O7oJ++Rt/yunjvDw8M1rHGf4jHKZZZftbHp7dH2u9RjOG
        SkA/VXbM741M2YDZwynvSr/D9cLg6KsrYzBFkEyyjH6BWd6kaIsmlNNxuZOTJs0Fx3cfose/5r3YzU/b
        9t+O/H4t8qKuoPS7YoNugPUdkf3SFjg4sPUEJXWkPUcBQ2CUzT1FNdJzwpSemPURhMGDB4Vp6VrRIIXm
        VtPix7bJp0fhWipvqKS96CkraNu6Ki9ix6sr6CszPQzSftG9gfdT+h/T3RFius2pdP2yKOsrhl9QHl2Q
        e2eFS9zvmobnd4qi42dsMfw+madrwQSEYaI1hUWGUQy9U9vefnjzuz+Jv9l1OL2u8AL1altuFLcaKOso
        pmTQPHyub/Q9j4TrzM52GuaxvfGSiTpIAySAPKZ+OH7QgyeRwk2FnV1PJe7u45TrekbAYQYBszvvvDR2
        aso4mMcSBufcrIkDleB4P3clAzdbhRWq21FyuVVFSUdMwyTTSuw1jR7k/wDuVzRrb1kfq+8f5VbqSppL
        SJCIi/70oH43gceB7e+6vn1C0Xatc2eG13qasjp4pxO0U03R1EDGHZBBG/uNjuFqac9MNC2Ah9Bp6mfN
        gAzVJM8h/NxI/QBUzx75pMurtR1rttxuQAo6KpqS7hsUTjhFdp9NdSVbg6ekio4z7zvAI/8AEZKvWJjI
        oxHExsbBw1oAA/IJFwBxyewWM6XH7aXlv0q+n9G7VPAI7xW/ah7tZEAP1KJbB6daQsT2TUlrjMjPuuk+
        bH5cIr+c/wAI/mvQ0A55PlafDx/itzyY5DI8tADWj6DC5T/xBalqbzqR8EUrhTUhLWAHYu9yuqK/IoZ+
        nn4Zx+i4w181xulWXZyZXZ/UrLqcr4jbpcZctg2C7zMm6XOyM+6kPjQVce+GuQtc2OjmL2ZXlDciHBrj
        ghZSOvOfiaq6HckDIUdLSYPClKSuY9oBK2HMilGQpnhlQ1NTHGMLVkpzjhEs1KN9lqy0vIwpUofMB7JK
        WdT4PCSIdL+pujK6Rj32urmhYdzGDsgWz19ZbpmWy8Za/iOU8O8FdOXGiZOwhzQVWeu9FQV8Eg+EMkZB
        HIXa4vSK0pqSvsFZ8ajf8SF3+tTuPyvH+x8q6tNX+33+i+00MvzAftInffjPYj/fhcwU8tZY6wW669Rj
        ziGoPB7Nd5RPZ7nV22sZXUE7opm9uHDsR7jwizowuwOCfoF5l54AaPO5Q3ovVlJqGm6CRBXMH7SEnny3
        uPHsiMO27oMgB7kk+VkCmjI0HHv2XnU88AN8nlA5JM1gJcQB3TQroDs14ce/ATc8TXt+bJPcqBuVHK0l
        0biEBK2Vrhu8HwE41zANsBV++vraVx6nHA7rODU0g2OXefZRsH4IxlYukaDjOT2HKEafUDX/AH5NuwOF
        IQXiEjAcPyTYnHdUjS13ytPblcuet+nJrRqOd/QTT1BL43Y2OeQukG3KM/iCjNU2606htr6C5Qtla4fK
        fxNPcLPl4/kjXi5Pjy24busO7hjdDFZE6N5c3Y91fPqR6WXizyyVFDC+to8ktLBl7R5Cp670EkL3Mlif
        G4chzSFy6uPt6OOUym4g4LlLCcOKlKa+DYFy0Y7PX10wio6Ked5OwjYSnNSaRumnaWGe6BtPLPuyHqy8
        DyrTypnJE3BdmvO7k+a6Nw5Cr4VU0PLl6Lw8cuwVbTKzQ9NTETyEkCC9O/fSU9qH05ctSpp2ytILQcrb
        WLt/cLqcSvdZ6RpblTSMfC1wcOCFU1XT12mar7NXdclFnEc55j8O8eV0rNE17SCAhbU+nKevp3sfE1wI
        wQQgqm31ssFRHVUsropWEFj2HBB9lcmhtXwXqFtLVlsNe3bHAl8jz4/RUZfbLX6WqHPijkmt2fuAZdD9
        O7fHt7LZtle2RsdRTS54cx7Sg6XGOyWVX+iNctqQyhu7w2Xhsx4d9f7o9Ja9gIdsd9jyg9c5oHzELWmB
        kGAMeSngAOF473QQlwtzJclwLj5/shu5WstJLQjifpxvhR9TEJB8rPzKiwV5URTwuJGQmWXKaN+AXE+E
        XV1sbJku38YwFC1lsA4b9FUa8F4qPxyYHYf3UnSXnGBkBQM9G5h2C05XmHkn6BAbf5u1zcOIIPIKiLmy
        xzkvqaCkkd3dGChOoucrAcOx/VRFbeukkl2T3KLyCisrLdQROdSUlPA1ozlrAFzF6s3aS86lnnc8uZH8
        jcq1L/eXPoZWtfuRjlU1qCIvc4+5OSseS+o6OLHzug2q3JWhK3dStXFhx2WhK3BURpk1ekJLM8pKzN9U
        jsFivMrzK6HI9WD2h43WSSCCvdmhrIXNewHIVMau0jX2Krkr7RH1xOPVLTcNd5b+67+R910G4ZGFG3O3
        xVMTmvaCD4QUBaLpFVMDmOcHMOHNcMOY7sR7KydE60kowyiuDzJBw1xO7P8AhC+vdCzRVDrnaT8CpaNy
        Bs8dnD3CFbXdXOmNJVsNPVs+9G48+QfcIOoKaohqYWzQSNexwyCF6/rJwDgd1TWktVVNqka0vL4Dy0lW
        pZr1R3WnEkDxk8tzug3SwZydz3KaeAnnlMSEk7BBrTsBGcKOqWN3AbkqSezPJytaVo9lGgP1dMXA52+i
        ha2kYM4CK6lo32UNXNaAVGgDXilO5AQZeIZW5PUQrIuTC4OwMIUutI12cjKrpfGq5rnyjqbuQUG3ppa5
        wcPorNudCMnAQnfrfE+J3UNx7rPPHflthnpW1c0ZJURUcnspa8uZDK5gdnBUJUTDJwqxpbsy4gHhJMPk
        34SVlNx9VDwvAUkl01yskkklASwO6SSDUraaKVhD2gghVN6l6Wt88bqhvVFMw9TXs2LT4SSQAGm7lUSm
        WnmIe6F3T18dXnCMrJdKuhqGPgkI8ZSSQW1pu6zV9M0ysAOOQVLuSSQNSLUnOMpJII+pJO3Ci6yMYKSS
        CBuDAQUM3GMZKSSpUwOXJjcEoOvbQQ4eySSirq41PbIOt0gJB+iD6iFrXEZykkqVeemuYwCkkkpRp//Z
</value>
  </data>
</root>